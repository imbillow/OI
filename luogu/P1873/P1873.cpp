/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool
 *(Windows, macOS, Linux) Author: hoshinoaya Time: 2021-05-23 12:48:04
 **/

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

vector<ll> Y;

int sol(ll x, ll l, ll h) {
  ll m = (l + h) / 2;
  ll modifier = 0;
  for (auto &&i : Y) {
    modifier += max(0LL, i - m);
  }
  if (modifier == x) {
    return m;
  } else if (modifier < x) {
    return sol(x, l, m);
  } else {
    return sol(x, m + 1, h);
  }
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);

  int n;
  ll m;
  cin >> n >> m;
  Y.resize(n);
  for (size_t i = 0; i < n; i++) {
    cin >> Y[i];
  }
  cout << sol(m, 0, *max_element(Y.begin(), Y.end()));

  return 0;
}
